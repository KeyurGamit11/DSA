Input: n = 2
Output: 2
Explanation: There are two ways to climb to the top.
1. 1 step + 1 step
2. 2 steps
#loot at recursive memoaztion code for better understanding
#code:
class Solution {
private:
    int solve(int n){
        //base case
        if(n==0) return 0;
        if(n==1) return 1;
        if(n==2) return 2;
        vector<int>dp(n+1,0);
        dp[0] = 0;
        dp[1] = 1;
        dp[2] = 2;
       
        for(int i=3; i<=n; i++){
            dp[i] = dp[i-1] + dp[i-2];
        }
        return dp[n];
    }
public:
    int climbStairs(int n) {
        return solve(n);
    }
};
