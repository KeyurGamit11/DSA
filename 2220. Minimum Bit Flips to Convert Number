Input: start = 10, goal = 7
Output: 3
Explanation: The binary representation of 10 and 7 are 1010 and 0111 respectively. We can convert 10 to 7 in 3 steps:
- Flip the first bit from the right: 1010 -> 1011.
- Flip the third bit from the right: 1011 -> 1111.
- Flip the fourth bit from the right: 1111 -> 0111.
It can be shown we cannot convert 10 to 7 in less than 3 steps. Hence, we return 3.
#code:
class Solution {
public:
    int minBitFlips(int start, int goal) {
        int cnt=0;
        vector<int>a1;
        vector<int>a2;
        int i=0;
        while(start>0){ //convert decimal to binary
            a1.push_back(start%2);
            start = start/2;
        }
        while(goal>0){ //convert decimal to binary
            a2.push_back(goal%2);
            goal = goal/2;
        }
          while (a1.size() < a2.size()) {
            a1.push_back(0);  // Add leading zero to a1
        }
        
        while (a2.size() < a1.size()) {
            a2.push_back(0);  // Add leading zero to a2
        }
        for(int i=0; i<a1.size(); i++){
            if(a1[i] != a2[i]){
                cnt++;
            }
        }
        return cnt;
    }
};
