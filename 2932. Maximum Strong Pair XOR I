Input: nums = [1,2,3,4,5]
Output: 7
Explanation: There are 11 strong pairs in the array nums: (1, 1), (1, 2), (2, 2), (2, 3), (2, 4), (3, 3), (3, 4), (3, 5), (4, 4), (4, 5) and (5, 5).
The maximum XOR possible from these pairs is 3 XOR 4 = 7.
#point:
A pair of integers x and y is called a strong pair if it satisfies the condition:
|x - y| <= min(x, y)
#code:
class Solution {
public:
    int maximumStrongPairXor(vector<int>& nums) {
        int n = nums.size();
        if(n < 2){
            return 0;
        }
        int ans = 0;
        for(int i=0; i<n; i++){
            for(int j=i+1; j<n; j++){
                if(abs(nums[i] - nums[j]) <= min(nums[i] , nums[j])){
                    ans = max(ans , nums[i] ^ nums[j]);
                }
            }
        }
        return ans;
    }
};
