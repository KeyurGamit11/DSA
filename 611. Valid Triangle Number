Input: nums = [2,2,3,4]
Output: 3
Explanation: Valid combinations are: 
2,3,4 (using the first 2)
2,3,4 (using the second 2)
2,2,3
#code:
class Solution {
private:
    int binarySearch(vector<int>&nums , int i,int j , int target){
        int k = -1;
        while(i <= j){
            int mid = (i+j)/2;
            if(nums[mid] < target){
                k = mid;
                i = mid +1;
            }else{
                j = mid -1;
            }
        }
        return k;
    }
public:
    int triangleNumber(vector<int>& nums) {
        int cnt=0;
        int n = nums.size();
        sort(nums.begin(),nums.end());
        for(int i=0; i<nums.size(); i++){
            for(int j=i+1; j<nums.size(); j++){
                int sum = nums[i]+nums[j];
                int k = binarySearch(nums,j+1,n-1,sum);
                if(k != -1){
                    cnt += (k-j);
                }
            }
        }
        return cnt;
    }
};
