Input: colors = [1,1,1,6,1,1,1]
Output: 3
Explanation: In the above image, color 1 is blue, and color 6 is red.
The furthest two houses with different colors are house 0 and house 3.
House 0 has color 1, and house 3 has color 6. The distance between them is abs(0 - 3) = 3.
Note that houses 3 and 6 can also produce the optimal answer.
#code:
class Solution {
public:
    int maxDistance(vector<int>& colors) {
       int ans=0;
       int maxi = INT_MIN;
       int n = colors.size()-1;
        for(int i=0; i<n; i++){
            for(int j=n; j>=i; j--){
                if(colors[i] != colors[j]){
                    ans = j-i;
                    maxi = max(ans,maxi);
                    break;
                }
            }
        }
       return maxi;
    }
};
