Input: nums = [3,1,2,4]
Output: [2,4,3,1]
Explanation: The outputs [4,2,3,1], [2,4,1,3], and [4,2,1,3] would also be accepted.
#step:
two pointer method
i at 0 and j at last element we keep that i is even and j is odd so make condition so that basis
#code:
class Solution {
public:
    vector<int> sortArrayByParity(vector<int>& nums) {
        int i=0;
        int j=nums.size()-1;
        while(i < j){
            if(nums[i] % 2 != 0 && nums[j] % 2 == 0){ ideal condition so swap it
                swap(nums[i] , nums[j]);
            }
            else if(nums[i] % 2 == 0){ means i is even so we just increment
                i++;
            }
            else if(nums[i] % 2 != 0){ means j is odd so we just decrement
                j--;
            }
        }
        return nums;
    }
};
