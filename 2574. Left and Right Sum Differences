Input: nums = [10,4,8,3]
Output: [15,1,11,22]
Explanation: The array leftSum is [0,10,14,22] and the array rightSum is [15,11,3,0].
The array answer is [|0 - 15|,|10 - 11|,|14 - 3|,|22 - 0|] = [15,1,11,22].
#code:
class Solution {
public:
    vector<int> leftRightDifference(vector<int>& nums) {
        int n = nums.size();
        vector<int>leftsum(n,0);
        vector<int>rightsum(n,0);
        leftsum[0] = 0;
        rightsum[n-1] = 0;
        for(int i=1; i<n; i++){
            leftsum[i] = leftsum[i-1]+nums[i-1]; // find leftsum ex : leftsum =0 + nums[0] index
        }
        for(int i=n-2; i>=0; i--){
            rightsum[i] = rightsum[i+1] + nums[i+1]; // find rightsum put i value in rightsum[n-1] u will understand
        }
        vector<int>ans(n);
        for(int i=0; i<n; i++){
            ans[i] = abs(leftsum[i] - rightsum[i]);
        }
        return ans;
    }
};
