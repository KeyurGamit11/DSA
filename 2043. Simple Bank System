Input
["Bank", "withdraw", "transfer", "deposit", "transfer", "withdraw"]
[[[10, 100, 20, 50, 30]], [3, 10], [5, 1, 20], [5, 20], [3, 4, 15], [10, 50]]
Output
[null, true, true, true, false, false]
#code:
class Bank {
public:
    vector<long long> bank;
    int n;
    Bank(vector<long long>& balance) {
        
        this->bank = balance;
        n = bank.size();
    }

    bool transfer(int account1, int account2, long long money) {
        if (account1 > n || account2 > n || bank[account1 - 1] < money) {
            return false;
        }
        bank[account1 - 1] -= money;
        bank[account2 - 1] += money;
        return true;
    }

    bool deposit(int account, long long money) {
        if (account > n) {
            return false;
        }
        bank[account - 1] += money;
        return true;
    }

    bool withdraw(int account, long long money) {
        if (account > n || bank[account - 1] < money) {

            return false;
        }
        bank[account - 1] -= money;
        return true;
    }
};

/**
 * Your Bank object will be instantiated and called as such:
 * Bank* obj = new Bank(balance);
 * bool param_1 = obj->transfer(account1,account2,money);
 * bool param_2 = obj->deposit(account,money);
 * bool param_3 = obj->withdraw(account,money);
 */
