Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [1,2,3,6,9,8,7,4,5]
#code:
class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int n = matrix.size();
        int m = matrix[0].size();
        int top =0 , left = 0;
        int bottom = n-1 , right = m-1;
        vector<int>ans;
        while(top <= bottom && left <= right){
            // moving left to right
            for(int i=top; i<= right; i++){
                ans.push_back(matrix[top][i]);
            }
            top++;
            // moving top to bottom
            for(int i=top; i<=bottom; i++){
                ans.push_back(matrix[i][right]);
            }
            right--;
            //for moving right to left
            if(top <= bottom){
                for(int i=right; i >= left; i--){
                    ans.push_back(matrix[bottom][i]);
                }
                bottom--;
            }
            //moving bottom to top
            if(left <= right){
                for(int i=bottom; i>= top; i--){
                    ans.push_back(matrix[i][left]);
                }
                left++;
            }
        } 
        return ans;
    }
};
