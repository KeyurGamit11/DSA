Input: nums = [2,4,3,7,10,6]
Output: 4
Explanation:
The product of all the elements in nums is: 2 * 4 * 3 * 7 * 10 * 6 = 10080 = 25 * 32 * 5 * 7.
There are 4 distinct prime factors so we return 4.
#Do not  take product of all , instead take factor of all one by one 
#if we take product of all it become to big
#code:
class Solution {
private: 
   bool prime(int n){
    if(n<2)return false;
    for(int i=2; i*i<=n; i++){
        if(n%i==0){
            return false;
        }
    }
    return true;
   }
public:
    int distinctPrimeFactors(vector<int>& nums) {
        set<int>st;
        for(int i=0; i<nums.size(); i++){
            int num1 = nums[i];
            //finding all element factor an put into set(to avoid duplicate )
            for(int j=2; j<=num1; j++){
                if(num1%j==0){
                    if(prime(j)){
                        st.insert(j);
                    }
                    int num2 = num1/j;
                    if(prime(num2)){
                        st.insert(num2);
                    }
                }
            }
        }
        /*for(auto i:st){
            cout<<i<<" ";
        }
        cout<<endl;
        */
        return st.size();
    }
};
