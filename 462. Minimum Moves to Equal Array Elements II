Input: nums = [1,2,3]
Output: 2
Explanation:
Only two moves are needed (remember each move increments or decrements one element):
[1,2,3]  =>  [2,2,3]  =>  [2,2,2]
#step: jsut sort it and find mid  , subtract mid from nums[i] and plus in cnt
#code:
class Solution {
public:
    int minMoves2(vector<int>& nums) {
        sort(nums.begin() , nums.end());
        int n=nums.size();
        int mid = nums[n/2];
        int cnt=0;
        for(int i=0; i<n; i++){
            if(nums[i] != mid){
                cnt += abs(mid - nums[i]);
            }
        }
        return cnt;
    }
};
