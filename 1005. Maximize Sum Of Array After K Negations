Input: nums = [4,2,3], k = 1
Output: 5
Explanation: Choose index 1 and nums becomes [4,-2,3].
#code:
class Solution {
public:
    int largestSumAfterKNegations(vector<int>& nums, int k) {
        int ans = 0;
        sort(nums.begin(), nums.end());
        for (int i = 0; i < nums.size(); i++) {
            if (nums[i] < 0 && k > 0) {
                nums[i] = -nums[i];
                k--;
            }
        }
        
        for (auto& i : nums) {
            ans += i;
        }
        if (k % 2 != 0) {
            int mini = *min_element(nums.begin(),nums.end());
            ans = ans - 2*mini;
            return ans;
        } else {
            return ans;
        }
    }
};
