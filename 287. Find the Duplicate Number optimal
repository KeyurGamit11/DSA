Example 1:
Input: nums = [1,3,4,2,2]
Output: 2
#step:
we use slow and fast point mehtod in this 
code:
class Solution {
public:
    int findDuplicate(vector<int>& nums) {
        int slow = nums[0];
        int fast = nums[0];
        do{
            slow = nums[slow];   //slow move by one
            fast = nums[nums[fast]]; //fast move by two
        } while(slow != fast); 
      //when slow and fast intersect we take fast at 0 index

        fast = nums[0];
        while(slow != fast){
            slow = nums[slow]; after that slow and fast move by one
            fast = nums[fast];
        }
        return slow;
    }
};
