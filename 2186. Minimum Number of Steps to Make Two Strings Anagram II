Input: s = "leetcode", t = "coats"
Output: 7
Explanation: 
- In 2 steps, we can append the letters in "as" onto s = "leetcode", forming s = "leetcodeas".
- In 5 steps, we can append the letters in "leede" onto t = "coats", forming t = "coatsleede".
"leetcodeas" and "coatsleede" are now anagrams of each other.
We used a total of 2 + 5 = 7 steps.
It can be shown that there is no way to make them anagrams of each other with less than 7 steps.
#code:
class Solution {
public:
    int minSteps(string s, string t) {
        int arr1[26]={0};
        int arr2[26]={0};
        for(int i=0; i<s.size(); i++){
            arr1[s[i]-'a']++;
        }
        for(int i=0; i<t.size(); i++){
            arr2[t[i]-'a']++;
        }
        int cnt=0;
        for(int i=0; i<26; i++){
            if(arr1[i] != arr2[i] && (arr1[i] != 0 || arr2[i] != 0)){
                cnt += abs(arr1[i] - arr2[i]);
            }
        }
        return cnt;
    }
};
