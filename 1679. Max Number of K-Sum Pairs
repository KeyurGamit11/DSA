Example 1:
Input: nums = [1,2,3,4], k = 5
Output: 2
Explanation: Starting with nums = [1,2,3,4]:
- Remove numbers 1 and 4, then nums = [2,3]
- Remove numbers 2 and 3, then nums = []
There are no more pairs that sum up to 5, hence a total of 2 operations.
#here first we sort the array
than use two pointer i and j at 0 and n-1
check condition if i+j == k we cnt++ and i++ and j--
if i+j<k than we increment i(i++)
if i+j>k than we decrement j(j--)
return cnt
#code:
class Solution {
public:
    int maxOperations(vector<int>& nums, int k) {
        int cnt=0;
        int n = nums.size();
        int i=0;
        int j=n-1;
        sort(nums.begin() , nums.end());
        while(i<j){
           if(nums[i] + nums[j] == k){
            cnt++;
            i++;
            j--;
           }
           else if(nums[i] + nums[j] < k){
            i++;
           }
           else{
            j--;
           }
        }
        return cnt;
    }
};
