Input: nums = [1,1,2,1,1], k = 3
Output: 2
Explanation: The only sub-arrays with 3 odd numbers are [1,1,2,1] and [1,2,1,1].
#code:
class Solution {
public:
    int numberOfSubarrays(vector<int>& nums, int k) {
        int n = nums.size() , ans =0 , prefsum = 0;
        unordered_map<int, int>freqofsum;
        freqofsum[0] = 1;
        
        for(int i=0; i<n; i++){
            prefsum += (nums[i] % 2 == 1) ? 1: 0;
            ans += freqofsum[prefsum - k];
            freqofsum[prefsum]++;
        }
        return ans;
    }
};
