Input: seats = [3,1,5], students = [2,7,4]
Output: 4
Explanation: The students are moved as follows:
- The first student is moved from from position 2 to position 1 using 1 move.
- The second student is moved from from position 7 to position 5 using 2 moves.
- The third student is moved from from position 4 to position 3 using 1 move.
In total, 1 + 2 + 1 = 4 moves were used.
#step:
sort seats and student and take diffence between try with example, dry run it
#code:
class Solution {
public:
    int minMovesToSeat(vector<int>& seats, vector<int>& students) {
        sort(seats.begin(), seats.end());
        sort(students.begin() , students.end());
        int i=0;
        int j=0;
        int MinimumMoves=0;

        while(i < seats.size() && j < students.size()){
             MinimumMoves += abs(seats[i++] - students[j++]);
        }
        return MinimumMoves;
    }
};
