Input: nums = [4,2,4,5,6]
Output: 17
Explanation: The optimal subarray here is [2,4,5,6].
#we need to found max sum with all unique element 
#code :
class Solution {
public:
    int maximumUniqueSubarray(vector<int>& nums) {
        int l=0,r=0,ans=0,sum=0;
        int n=nums.size();
        unordered_map<int,int>mp;

        while(r < n){
            mp[nums[r]]++;
            sum += nums[r];
            while(mp[nums[r]] > 1){
                
                mp[nums[l]]--;
                if(mp[nums[l]]==0){
                    mp.erase(nums[l]);
                }
                sum -= nums[l];
                l++;
            }
            ans = max(ans,sum);
            r++;

        }
        return ans;
    }
};
