Input: nums = [3,1,4,3,2,2,4], k = 2
Output: 4
Explanation: There are 4 different good subarrays:
- [3,1,4,3,2,2] that has 2 pairs.
- [3,1,4,3,2,2,4] that has 3 pairs.
- [1,4,3,2,2,4] that has 2 pairs.
- [4,3,2,2,4] that has 2 pairs.
#code:
class Solution {
public:
    long long countGood(vector<int>& nums, int k) {
        long long ans=0;
        int l=0,r=0,n=nums.size();
        unordered_map<int,int>mp;
        long long cnt=0;
        while(r < n){
            cnt += mp[nums[r]];
            mp[nums[r]]++;
            while(cnt >= k){
               ans += n - r;
               cnt -= mp[nums[l]]-1;
               mp[nums[l]]--;
               l++;
            }
            r++;
        }

        return ans;
    }
};
