Input: root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22
Output: true
Explanation: The root-to-leaf path with the target sum is shown
#code:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    bool DFS(TreeNode* root , int Currsum  , int targetsum ){
        //base case
        if(root == NULL){
            return false;
        }
        Currsum += root -> val;
        if(root -> left == NULL && root -> right == NULL){
            return Currsum == targetsum;
        }
       // recursive call
        return DFS(root -> left , Currsum , targetsum ) || 
               DFS(root -> right , Currsum , targetsum );
    }
public:
    bool hasPathSum(TreeNode* root, int targetSum) {
        if(root == NULL){
            return 0;
        }
        return DFS(root , 0 , targetSum);
    }
};
