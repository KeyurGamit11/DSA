Input: amount = [1,4,2]
Output: 4
Explanation: One way to fill up the cups is:
Second 1: Fill up a cold cup and a warm cup.
Second 2: Fill up a warm cup and a hot cup.
Second 3: Fill up a warm cup and a hot cup.
Second 4: Fill up a warm cup.
It can be proven that 4 is the minimum number of seconds needed.
#code:
class Solution {
public:
    int fillCups(vector<int>& amount) {
        
        priority_queue<int>pq;

        int ans=0;
        for(auto i:amount){
            pq.push(i);
        }
        //take two maxi everytime
        while(pq.top() != 0){
            int first = pq.top();
            pq.pop();
            int second = pq.top();
            pq.pop();
            ans++;
            first--;
            second--;
            pq.push(first);
            pq.push(second);
        }
        return ans;

    }
};
