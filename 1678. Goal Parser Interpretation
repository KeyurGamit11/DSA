Input: command = "G()(al)"
Output: "Goal"
Explanation: The Goal Parser interprets the command as follows:
G -> G
() -> o
(al) -> al
The final concatenated result is "Goal".
#code:
class Solution {
public:
    string interpret(string command) {
        string output="";
        for(int i=0; i<command.size(); i++){
            if(command[i] == 'G'){
                output += 'G';
            }
            else if(command[i] == '(' && command[i+1] == ')'){
                output += 'o';
            }
            else if(command[i] == 'a'){
                output += "al";
            }
        }
        return output;
    }
};
