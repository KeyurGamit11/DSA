Example 1:
Input: nums = [1,3,5,6], target = 5
Output: 2
Example 2:
Input: nums = [1,3,5,6], target = 2
Output: 1
#step :
we apply binary search in this problem 
if we can't find element in nums we simply return starting index 

#code :
class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int s=0;
        int e = nums.size()-1;
        while(s <= e){
             int mid = s + (e-s)/2;
            if(target == nums[mid]){
                return mid;
            }
            if(target > nums[mid]){
                s = mid +1;
            }
            else{
                e = mid -1;
            }
        }
        return s;
    }
};
