Input: left = 6, right = 10
Output: 4
Explanation:
6  -> 110 (2 set bits, 2 is prime)
7  -> 111 (3 set bits, 3 is prime)
8  -> 1000 (1 set bit, 1 is not prime)
9  -> 1001 (2 set bits, 2 is prime)
10 -> 1010 (2 set bits, 2 is prime)
4 numbers have a prime number of set bits.
#code:
class Solution {
private:
    int SetBit(int n){
        int cnt=0;
        while(n>0){
            if(n%2){
                cnt++;
            }
            n /= 2;
        }
        return cnt;
    }
    bool isprime_SetBit(int n){
        if(n<2)return false;
        for(int i=2; i*i<=n; i++){
            if(n%i==0){
                return false;
            }
        }
        return true;
    }
public:
    int countPrimeSetBits(int left, int right) {
        int cnt=0;
        for(int i=left; i<=right; i++){
            int total_setbit = SetBit(i);
            if(isprime_SetBit(total_setbit)){
                cnt++;
            }
        }
        return cnt;
    }
};
