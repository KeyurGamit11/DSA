Input: arr = [1,2,2,1,1,3]
Output: true
Explanation: The value 1 has 3 occurrences, 2 has 2 and 3 has 1. No two values have the same number of occurrences.
#code:
class Solution {
public:
    bool uniqueOccurrences(vector<int>& arr) {
        unordered_map<int, int> count;
        for (int i = 0; i < arr.size(); i++) {
            count[arr[i]]++; //count freq
        }
        unordered_set<int>st; // we take set cause we dont want similar freq check(set dont take duplicate)
        for (auto &it : count) {
            int freq = it.second;
            if (st.find(freq) != st.end()) {
                return false; //found dupicate freq
            }
            st.insert(freq); //insert into set
        }
        return true;
    }
};
