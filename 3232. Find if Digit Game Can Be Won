Input: nums = [1,2,3,4,10]
Output: false
Explanation:
Alice cannot win by choosing either single-digit or double-digit numbers.
#step: so here alice can win only if one digit element sum not equal to two digit sum because alice can choose only one type one digit or two digit
so we find first one digit sum and two digit sum then check if they equal means alice loose so we return false else we return true(if one digit sum not equal to teo digit sum)
#code:
class Solution {
public:
    bool canAliceWin(vector<int>& nums) {
        int OneDigitSum=0;
        int TwoDigitSum=0;
        for(int i=0; i<nums.size(); i++){
            if(nums[i] >= 10){
                TwoDigitSum += nums[i]; // for two digit sum 
            }
            else{
                OneDigitSum += nums[i]; // for one digit sum
            }
        }
        if(TwoDigitSum == OneDigitSum){ 
            return false;
        }
        return true;
    }
};
