Input: arr[] = [1, 2, 1, 3, 4, 2, 3], k = 4
Output:  [3, 4, 4, 3]
Explanation: Window 1 of size k = 4 is 1 2 1 3. Number of distinct elements in this window are 3. 
Window 2 of size k = 4 is 2 1 3 4. Number of distinct elements in this window are 4.
Window 3 of size k = 4 is 1 3 4 2. Number of distinct elements in this window are 4.
Window 4 of size k = 4 is 3 4 2 3. Number of distinct elements in this window are 3.
#code:

class Solution {
  public:
    vector<int> countDistinct(vector<int> &arr, int k) {
        unordered_map<int,int>mp;
        
        vector<int>ans;
        int l=0,r=0,n=arr.size();
        while(r<n){
            mp[arr[r]]++;
            if(r-l+1 == k){
                ans.push_back(mp.size()); // if window size is qual to k add mp size
                mp[arr[l]]--;
                if(mp[arr[l]]==0){
                    mp.erase(arr[l]); //  erase from mp if fr is 0
                }
                l++;
                
            }
            r++;
        }
        return ans;
    }
};
