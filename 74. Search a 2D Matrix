Input: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3
Output: true
#step:
we just apply binary search in this 
but before that we need row and col index according to mid so we have to find out that 
#code:
class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int n = matrix.size();
        int m = matrix[0].size();
        int low =0 , high = (n*m)-1;
        while(low <= high){
            int mid = (low + high)/2;
            int row = mid / m;
            int col= mid % m;
            if(matrix[row][col] == target){
                return true;
            }
            else if(matrix[row][col] < target){
                low = mid +1;
            }
            else{
                high = mid - 1;
            }

        }
        return false;
    }
};
