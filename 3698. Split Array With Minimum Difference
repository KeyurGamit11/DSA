Input: nums = [1,3,2]
Output: 2
Explanation:
i	left	right	Validity	left sum	right sum	Absolute difference
0	[1]	[3, 2]	Yes	1	5	|1 - 5| = 4
1	[1, 3]	[2]	Yes	4	2	|4 - 2| = 2
Thus, the minimum absolute difference is 2.
#code:
#include <bits/stdc++.h>
using namespace std;

class Solution {
public:
    long long splitArray(vector<int>& nums) {
        int n = nums.size();
        if (n < 2) return -1;              

        vector<bool> left(n, false), right(n, false);
        vector<long long> pre(n, 0);

        // Build strictly increasing prefix flags
        left[0] = true;
        for (int i = 1; i < n; ++i) {
            if (nums[i] > nums[i-1] && left[i-1]) left[i] = true;
        }

        // Build strictly decreasing suffix flags
        right[n-1] = true;
        for (int i = n-2; i >= 0; --i) {
            if (nums[i] > nums[i+1] && right[i+1]) right[i] = true;
        }

        // Prefix sums (long long)
        pre[0] = nums[0];
        for (int i = 1; i < n; ++i) pre[i] = pre[i-1] + nums[i];

        long long mini = numeric_limits<long long>::max();
        for (int i = 0; i < n-1; ++i) {
            if (left[i] && right[i+1]) {
                long long s1 = pre[i];
                long long s2 = pre[n-1] - pre[i];
                long long diff = (s1 > s2) ? (s1 - s2) : (s2 - s1);
                mini = min(mini, diff);
            }
        }

        return (mini == numeric_limits<long long>::max()) ? -1 : mini;
    }
};
