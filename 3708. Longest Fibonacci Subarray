Input: nums = [1,1,1,1,2,3,5,1]
Output: 5
Explanation:
The longest Fibonacci subarray is nums[2..6] = [1, 1, 2, 3, 5].
[1, 1, 2, 3, 5] is Fibonacci because 1 + 1 = 2, 1 + 2 = 3, and 2 + 3 = 5.
#code:
class Solution {
public:
    int longestSubarray(vector<int>& nums) {
        int n = nums.size();
        if(n <= 2){
            return n;
        }
        int ans=2;
        int cnt=2;
        for(int i=2; i<n; i++){
            
            if(nums[i] == nums[i-1]+nums[i-2]){
                cnt++;
                ans = max(cnt,ans);
            }else{
                cnt=2;
            }
            ans = max(cnt,ans);
        }
        return ans;
    }
};
