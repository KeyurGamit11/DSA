Input: s = "ABFCACDB"
Output: 2
Explanation: We can do the following operations:
- Remove the substring "ABFCACDB", so s = "FCACDB".
- Remove the substring "FCACDB", so s = "FCAB".
- Remove the substring "FCAB", so s = "FC".
So the resulting length of the string is 2.
It can be shown that it is the minimum length that we can obtain.
#code:
class Solution {
public:
    int minLength(string s) {
        stack<char>st;
        for(auto &ch: s){
            if((!st.empty() && ch == 'B' && st.top() == 'A') || (!st.empty()&&ch=='D' && st.top()=='C')){
                 st.pop();
            }
            else{
                st.push(ch);
            }
        }
        return st.size();
    }
};
