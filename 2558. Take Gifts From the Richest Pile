Input: gifts = [25,64,9,4,100], k = 4
Output: 29
Explanation: 
The gifts are taken in the following way:
- In the first second, the last pile is chosen and 10 gifts are left behind.
- Then the second pile is chosen and 8 gifts are left behind.
- After that the first pile is chosen and 5 gifts are left behind.
- Finally, the last pile is chosen again and 3 gifts are left behind.
The final remaining gifts are [5,8,9,4,3], so the total number of gifts remaining is 29.
#code:
class Solution {
private:
    long long Maximum_ind(vector<int>& gifts){
        long long maxi = *max_element(gifts.begin(),gifts.end());
        long long ans=0;
        for(int i=0; i<gifts.size(); i++){
            if(gifts[i]==maxi){
                ans=i;
            }
        }
        return ans;
    }
public:
    long long pickGifts(vector<int>& gifts, int k) {
        while(k--){
            int ind = Maximum_ind(gifts);
            gifts[ind] = floor(sqrt(gifts[ind]));
        }
        long long sum = accumulate(gifts.begin(),gifts.end(),0LL);
        return sum;
    }
};
