Input: tokens = ["2","1","+","3","*"]
Output: 9
Explanation: ((2 + 1) * 3) = 9
#code:
class Solution {
private:
   bool isoperation(string c){
       if(c== "+" || c == "-" || c == "*" || c == "/"){
         return true;
       }
       return false;
   }
public:
    int evalRPN(vector<string>& tokens) {
        stack<int>st;
        for(auto i:tokens){
            if(!isoperation(i)){ // if not operation
                st.push(stoi(i));
            }
            else{
                int x = st.top();
                st.pop();
                int y = st.top();
                st.pop(); // last two element in stack x,y for operation
                if(i == "+"){
                    st.push(y+x); // for + operator
                }
                else if(i == "-"){
                    st.push(y-x);
                }
                else if(i == "*"){
                    st.push(y*x);
                }
                else if(i == "/"){
                    st.push(y/x);
                }
            }
        }
        return st.top();
    }
};
