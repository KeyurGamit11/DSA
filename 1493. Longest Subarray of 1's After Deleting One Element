Input: nums = [0,1,1,1,0,1,1,0,1]
Output: 5
Explanation: After deleting the number in position 4, [0,1,1,1,1,1,0,1] longest subarray with value of 1's is [1,1,1,1,1].
#code:
class Solution {
public:
    int longestSubarray(vector<int>& nums) {
        int l=0,r=0,ans=0,Zero=0;
        int n=nums.size();
        while(r<n){
            if(nums[r]==0){
                Zero++;  //cnt of Zero
            }
            if(Zero>1){ //we need only one Zero or no Zero so if Zero > 1 we shrink window and dcrease 0 
                if(nums[l]==0){
                    Zero--;
                }
                l++;
            }
            if(Zero<=1){
                ans = max(ans,r-l); //we need to delete one so we take r-l
            }
            r++;
        }
        return ans;
    }
};
