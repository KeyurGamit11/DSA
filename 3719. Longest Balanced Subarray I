Input: nums = [2,5,4,3]
Output: 4
Explanation:
The longest balanced subarray is [2, 5, 4, 3].
It has 2 distinct even numbers [2, 4] and 2 distinct odd numbers [5, 3]. Thus, the answer is 4.
#code:
class Solution {
    
public:
   bool check(int i, int j, vector<int>& nums) {
     unordered_set<int> even, odd;
        for (int k = i; k <= j; k++) {
            if (nums[k] % 2 == 0) even.insert(nums[k]);
            else odd.insert(nums[k]);
        }
        return even.size() == odd.size();
}

    int longestBalanced(vector<int>& nums) {
        int ans=0;
        for(int i=0; i<nums.size(); i++){
            unordered_map<int,int>even,odd;
            for(int j=i; j<nums.size(); j++){
                if(nums[j]%2==0){
                    even[nums[j]]++;
                }else{
                    odd[nums[j]]++;
                }
                if(even.size()==odd.size()){
                    ans = max(ans,j-i+1);
                }
            }
        }
        return ans;
    }
};
