Input: grid = [[1,4],[2,3]]
Output: true
Explanation:
A horizontal cut between row 0 and row 1 results in two non-empty sections, each with a sum of 5. Thus, the answer is true.
#code:
class Solution {
public:
    bool canPartitionGrid(vector<vector<int>>& grid) {
        long long total_sum=0;
        for(auto &i:grid){
            for(auto &j:i){
                total_sum += j;
            }
        }
        int n = grid.size() , m = grid[0].size();
        //check for row wise partition
        long long row_sum = 0 , col_sum=0;
        for(int i=0; i<n-1; i++){
            for(int j=0; j<m; j++){
                row_sum += grid[i][j];
            }
            if(row_sum==total_sum-row_sum) return true;
        }
        for(int j=0; j<m-1; j++){
            for(int i=0; i<n; i++){
                col_sum += grid[i][j];
            }
            if(col_sum == total_sum - col_sum) return true;
        }
        return false;
    }
};
