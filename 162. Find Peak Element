Input: nums = [1,2,3,1]
Output: 2
Explanation: 3 is a peak element and your function should return the index number 2.
#code:
class Solution {
public:
    int findPeakElement(vector<int>& nums) {
        int n = nums.size();
        if(n == 1) return 0;
        if(nums[0] > nums[1]) return 0;  // check for 0 index 
        if(nums[n-1] > nums[n-2]) return n-1; // check for last index
        int low = 1;
        int high = n-2;
        while(low <= high){
            int mid = low + (high - low) / 2;
            if(nums[mid] > nums[mid-1] && nums[mid] > nums[mid+1]){
                return mid;
            }
            else if(nums[mid] > nums[mid -1]){
                low = mid + 1; // means we are in increasing curve we have to go decreasing curve
            }
            else{
                high = mid - 1; // means we have to go in increasing curve it nums[mid] > nums[mid+1]
            }
        }
        return -1;
    }
};
