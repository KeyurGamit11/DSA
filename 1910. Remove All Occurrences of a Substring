Input: s = "daabcbaabcbc", part = "abc"
Output: "dab"
Explanation: The following operations are done:
- s = "daabcbaabcbc", remove "abc" starting at index 2, so s = "dabaabcbc".
- s = "dabaabcbc", remove "abc" starting at index 4, so s = "dababc".
- s = "dababc", remove "abc" starting at index 3, so s = "dab".
Now s has no occurrences of "abc".
#code:
class Solution {
public:
    string removeOccurrences(string s, string part) {
        stack<char> st;
        for (auto& ch : s) {
            st.push(ch);
            if(st.size() >= part.size()) { //starting check if stack size become more than part
                string temp = "";
                for(int i=0; i<part.size(); i++){  //take part size str from stack 
                    temp += st.top();
                    st.pop();
                }
                reverse(temp.begin(),temp.end()); //reverse it so it become og
            
                if(temp != part){  //if both not same again push into st
                    for(auto i:temp){
                        st.push(i); 
                    }
                }
            }
        }
        string ans = "";
        while (!st.empty()) {
            ans += st.top();
            st.pop();
        }
        reverse(ans.begin(), ans.end());
        return ans;
    }
};
