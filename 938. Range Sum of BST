Input: root = [10,5,15,3,7,null,18], low = 7, high = 15
Output: 32
Explanation: Nodes 7, 10, and 15 are in the range [7, 15]. 7 + 10 + 15 = 32.
#code:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int rangeSumBST(TreeNode* root, int low, int high) {
        if(!root){
            return 0;
        }
        if(root -> val >= low && root -> val <= high){ // if root value lie between low and high
            return root -> val + rangeSumBST(root -> left , low , high) + rangeSumBST(root -> right , low , high);
        }
        if(root -> val < low){ // root value is less than low move to right side
            return rangeSumBST(root -> right , low , high);
        }
        else{ // means root value is more than high sp move to left side
            return rangeSumBST(root -> left, low, high);
        }
    }
};
