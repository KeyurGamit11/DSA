Input: matrix = [[3,7,8],[9,11,13],[15,16,17]]
Output: [15]
Explanation: 15 is the only lucky number since it is the minimum in its row and the maximum in its column.
#code:
class Solution {
public:
    vector<int> luckyNumbers (vector<vector<int>>& matrix) {
       vector<int>ans;
       int n = matrix.size();
       int m = matrix[0].size();
       for(int i=0; i<n; i++){
          int mini = 100005;
          int index = -1;
          for(int j=0; j<m; j++){ // for each row find min
            if(matrix[i][j] < mini){
                mini = matrix[i][j];
                index = j;
            }
          }
           int maxi = -1;
          for(int j=0; j<n; j++){ // for col find maximum
           if(matrix[j][index] > maxi){
            maxi = matrix[j][index];
           }
       } 
         if(maxi == mini){
         ans.push_back(maxi);
       }
       }
       return ans;
    }
};
