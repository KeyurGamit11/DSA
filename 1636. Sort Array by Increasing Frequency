Input: nums = [2,3,1,3,2]
Output: [1,3,3,2,2]
Explanation: '2' and '3' both have a frequency of 2, so they are sorted in decreasing order.
#code:
class Solution {
public:
    vector<int> frequencySort(vector<int>& nums) {
        
        unordered_map<int,int>mp;
        for(int i=0; i<nums.size(); i++){
            mp[nums[i]]++;
        }
        //we are using lamda function here
        sort(nums.begin() , nums.end() ,[&](int a , int b){
            return mp[a] != mp[b] ? mp[a] < mp[b] : a>b; }); //Compare first by frequency, then by value in descending order if frequencies are equal
        return nums;
    }
};
