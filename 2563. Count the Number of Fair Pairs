Input: nums = [0,1,7,4,4,5], lower = 3, upper = 6
Output: 6
Explanation: There are 6 fair pairs: (0,3), (0,4), (0,5), (1,3), (1,4), and (1,5).
#code:
class Solution {
public:
    long long countFairPairs(vector<int>& nums, int lower, int upper) {
        sort(nums.begin(),nums.end());
        long long cnt=0;
        int n=nums.size();
        for(int i=0; i<n-1; i++){
            int mini = lower-nums[i];
            int maxi = upper-nums[i];

            //B.S for search valid pair or range where all pair possible
            auto start = lower_bound(nums.begin() + i+1 , nums.end() , mini);
            auto end = upper_bound(nums.begin()+i+1 , nums.end() , maxi);

            cnt += (end-start);
        }
        return cnt;
    }
};
