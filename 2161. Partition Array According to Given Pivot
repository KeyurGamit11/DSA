Input: nums = [9,12,5,10,14,3,10], pivot = 10
Output: [9,5,3,10,10,12,14]
Explanation: 
The elements 9, 5, and 3 are less than the pivot so they are on the left side of the array.
The elements 12 and 14 are greater than the pivot so they are on the right side of the array.
The relative ordering of the elements less than and greater than pivot is also maintained. [9, 5, 3] and [12, 14] are the respective orderings.
#one of the best and funny approach i have done
#code:
class Solution {
public:
    vector<int> pivotArray(vector<int>& nums, int pivot) {
        vector<int>ans;
        for(int i=0; i<nums.size(); i++){
            if(nums[i] < pivot){ //first only put less value than pivot
                ans.push_back(nums[i]);
            }
        }
         for(int i=0; i<nums.size(); i++){
            if(nums[i] == pivot){ //than put equal to pivot value
                ans.push_back(nums[i]);
            }
        }
         for(int i=0; i<nums.size(); i++){
            if(nums[i] > pivot){ // than put greater than pivot value
                ans.push_back(nums[i]);
            }
        }
        return ans;
    }
};
