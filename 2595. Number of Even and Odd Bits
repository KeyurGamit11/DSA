Input: n = 50
Output: [1,2]
Explanation:
The binary representation of 50 is 110010.
It contains 1 on indices 1, 4, and 5.
#code:
class Solution {
private:
    string decimalToBinary(int decimal) {
    if (decimal == 0) return "0";

    std::string binary = "";
    while (decimal > 0) {
        binary = char((decimal % 2) + '0') + binary;
        decimal /= 2;
    }
    return binary;
}
public:
    vector<int> evenOddBit(int n) {
        string binary = decimalToBinary(n);
        reverse(binary.begin(),binary.end());
        int even=0,odd=0;
        for(int i=0; i<binary.size(); i++){
            if(binary[i] == '1'){
                if(i%2==0){
                    even++;
                }else{
                    odd++;
                }
            }
        }
        return {even,odd};
    }
};
