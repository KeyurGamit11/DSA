Input: nums = [1, 3, 3, 2]
Output: true
Explanation: Since the maximum element of the array is 3, the only candidate n for which this array could be a permutation of base[n], is n = 3. 
It can be seen that nums is a permutation of base[3] = [1, 2, 3, 3] (by swapping the second and fourth elements in nums, we reach base[3]). 
Therefore, the answer is true.
#code:
class Solution {
public:
    bool isGood(vector<int>& nums) {
        //int maxi = *max_element(nums.begin(),nums.end());
        sort(nums.begin(),nums.end());
        int n=nums.size();
        if(n==1)return false; //edge case
        int maxi=nums[n-1];
        int cnt=0;
        for(int i=0; i<n-1; i++){
            if(nums[i]==nums[i+1]) cnt++; //cnt of each element shoulld be 1 except max element should be 2
        }
        return nums[n-2]==nums[n-1] && nums[n-1] == n-1 && cnt==1;
        //after sort last two element should be equal , arr size should be max element -1 , and only max element cnt should 2
    }
};
