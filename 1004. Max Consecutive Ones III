Input: nums = [1,1,1,0,0,0,1,1,1,1,0], k = 2
Output: 6
Explanation: [1,1,1,0,0,1,1,1,1,1,1]
Bolded numbers were flipped from 0 to 1. The longest subarray is underlined.
#code:
class Solution {
public:
    int longestOnes(vector<int>& nums, int k) {
        int l=0,r=0,ans=0,Zero=0;
        int n=nums.size();
        while(r<n){
            if(nums[r]==0){
                Zero++;
            }
            while(Zero>k){
                if(nums[l]==0){
                    Zero--;
                }
                l++;
            }
            if(Zero<=k){
                ans = max(ans,r-l+1);
            }
            r++;
        }
        return ans;
    }
};
