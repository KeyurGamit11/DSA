Input: nums = [1,3,8,48,10]
Output: 3
Explanation: The longest nice subarray is [3,8,48]. This subarray satisfies the conditions:
- 3 AND 8 = 0.
- 3 AND 48 = 0.
- 8 AND 48 = 0.
It can be proven that no longer nice subarray can be obtained, so we return 3.
#code:
class Solution {
public:
    int longestNiceSubarray(vector<int>& nums) {
        int l=0,r=0,ans=0;
        int n=nums.size();
        int total =0;
        while(r<n){
   
            while((total & nums[r]) !=0){
                total &= ~nums[l];  //shrink window , bitwise AND NOT , removes only the bits contributed by nums[l].
                l++;
            }
            total |= nums[r]; //OR
            ans = max(ans,r-l+1);
            r++;
        }
        return ans;
    }
};
