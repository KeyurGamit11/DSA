Input: arr = [1,3,4,8], queries = [[0,1],[1,2],[0,3],[3,3]]
Output: [2,7,14,8] 
Explanation: 
The binary representation of the elements in the array are:
1 = 0001 
3 = 0011 
4 = 0100 
8 = 1000 
The XOR values for queries are:
[0,1] = 1 xor 3 = 2 
[1,2] = 3 xor 4 = 7 
[0,3] = 1 xor 3 xor 4 xor 8 = 14 
[3,3] = 8
#code:
class Solution {
public:
    vector<int> xorQueries(vector<int>& arr, vector<vector<int>>& queries) {
        int n= arr.size();
        vector<int>prefix(n);
        vector<int>ans(queries.size());
        //count all prefix XOR array
        prefix[0]= arr[0];
        for(int i=1; i<n; i++){
            prefix[i] = prefix[i-1]^arr[i];
        }
        //process each query
        for(int i=0; i<queries.size(); i++){
            int left = queries[i][0];
            int right= queries[i][1];
            if(left==0){
                ans[i] = prefix[right];
            }
            else{
                ans[i] = prefix[right]^prefix[left-1];
            }
        }
        return ans;
    }
};
