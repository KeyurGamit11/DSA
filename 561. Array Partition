Input: nums = [6,2,6,5,1,2]
Output: 9
Explanation: The optimal pairing is (2, 1), (2, 5), (6, 6). min(2, 1) + min(2, 5) + min(6, 6) = 1 + 2 + 6 = 9.
#code:
class Solution {
public:
    int arrayPairSum(vector<int>& nums) {
        //pattern is if u sort array u will get it
        sort(nums.begin() , nums.end());
        int ans =0;
        for(int i=0; i<nums.size(); i += 2){ // here we traverse i+=2 because we are useing pair
            ans += min(nums[i] , nums[i+1]);  // also we can just use nums[i] because its sorted
        }
        return ans;
    }
};
