Input: nums = [2,1,4,3,5], k = 10
Output: 6
Explanation:
The 6 subarrays having scores less than 10 are:
- [2] with score 2 * 1 = 2.
- [1] with score 1 * 1 = 1.
- [4] with score 4 * 1 = 4.
- [3] with score 3 * 1 = 3. 
- [5] with score 5 * 1 = 5.
- [2,1] with score (2 + 1) * 2 = 6.
Note that subarrays such as [1,4] and [4,3,5] are not considered because their scores are 10 and 36 respectively, while we need scores strictly less than 10.
#solve hard problem feeling awsome
#code:
class Solution {
#define ll long long
public:
    long long countSubarrays(vector<int>& nums, long long k) {
        ll r=0,l=0,ans=0,sum=0;
        int n=nums.size();
        while(r < n){
            sum += nums[r];
            while(sum*(r-l+1) >= k){
                sum -= nums[l];
                l++;
            }
            ans += (r-l+1);
            r++;
        }
        return ans;
    }
};
