Input: words = ["e","a","b"], groups = [0,0,1]
Output: ["e","b"]
Explanation: A subsequence that can be selected is ["e","b"] because groups[0] != groups[2]. Another subsequence that can be selected is ["a","b"] because groups[1] != groups[2].
It can be demonstrated that the length of the longest subsequence of indices that satisfies the condition is 2.
#code:
class Solution {
public:
    vector<string> getLongestSubsequence(vector<string>& words, vector<int>& groups) {
        vector<string>ans;
        for(int i=0; i<groups.size(); i++){
            if(i==0 || groups[i] != groups[i-1]){
                ans.push_back(words[i]);
            }
        }
        if(words.size()==1) return words;
        return ans;   
    }
};
