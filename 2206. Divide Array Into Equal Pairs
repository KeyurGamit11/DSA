Input: nums = [3,2,3,2,2,2]
Output: true
Explanation: 
There are 6 elements in nums, so they should be divided into 6 / 2 = 3 pairs.
If nums is divided into the pairs (2, 2), (3, 3), and (2, 2), it will satisfy all the conditions
#code:
class Solution {
public:
    bool divideArray(vector<int>& nums) {
        //we just need to see if there is odd freq of num , if odd freq means false
        //if all freq is even we can devide it 
        unordered_map<int,int>mp;
        for(auto &i:nums){
            mp[i]++;
        }
        for(auto &i:mp){
            if(i.second % 2 != 0){
                return false;
            }
        }
        return true;
    }
};
